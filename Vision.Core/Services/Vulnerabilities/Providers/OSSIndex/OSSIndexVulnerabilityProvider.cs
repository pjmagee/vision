using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Vision.Core.Services;

namespace Vision.Core
{
    /// <summary>
    /// Test OSS Index with these examples:
    /// https://github.com/OSSIndex/audit.net/blob/master/tests/NugetAuditor.Tests/TestFiles/packages.config.example
    /// </summary>
    public class OSSIndexVulnerabilityProvider : IVulnerabilityProvider
    {
        public ReporterKind Kind { get; } = ReporterKind.OSSIndex;

        private readonly OSSIndexCoordinateBuilder coordinateBuilder;

        public OSSIndexVulnerabilityProvider(OSSIndexCoordinateBuilder coordinateBuilder)
        {
            this.coordinateBuilder = coordinateBuilder;
        }

        public async Task<Vulnerability> GetByDependencyVersionAsync(DependencyVersion dependencyVersion)
        {
            Uri packageUri = coordinateBuilder.GetPackageUrl(dependencyVersion);

            using (var httpClient = new HttpClient())
            {
                OSSIndexClient client = new OSSIndexClient(httpClient);

                OSSIndexResponse<ComponentReport> response = await client.GetAsync(packageUri);

                if (response.StatusCode == (int)HttpStatusCode.OK && response.Result.Vulnerabilities.Count > 0)
                {
                    return new Vulnerability
                    {
                        DependencyVersionId = dependencyVersion.Id,
                        DependencyVersion = dependencyVersion,
                        Kind = Kind,
                        Link = response.Result.Reference.AbsoluteUri,
                        CheckTime = DateTime.Now,
                        ResponseData = System.Text.Json.JsonSerializer.Serialize(response.Result),
                    };
                }
            }

            return null;
        }
    }
}