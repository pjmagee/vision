@page "/data/vcs/{VersionControlId:guid}/repositories/{RepositoryId:guid}"

@inject HttpClient HttpClient

<BreadcrumbsComponent>
    <li class="breadcrumb-item">Data</li>
    <li class="breadcrumb-item">Version control systems</li>
    <li class="breadcrumb-item"><a href="@($"/data/vcs/{VersionControlId}")">@VersionControl?.Endpoint</a></li>
    <li class="breadcrumb-item active">@Repository?.WebUrl</li>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Assets</h6>
    </div>
    <div class="card-body">
        @if (Assets != null)
        {
            <AssetsComponent Items="Assets"></AssetsComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Contionus integration &amp; Continious delivery builds</h6>
    </div>
    <div class="card-body">
        @if (Builds != null)
        {
            <CiCdBuildsComponent Items="Builds"></CiCdBuildsComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Frameworks</h6>
    </div>
    <div class="card-body">
        @if (Frameworks != null)
        {
            <FrameworksComponent Items="Frameworks"></FrameworksComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Dependencies</h6>
    </div>
    <div class="card-body">
        @if (Frameworks != null)
        {
            <DependenciesComponent Items="Dependencies"></DependenciesComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>


@functions
{
    [Parameter] private Guid VersionControlId { get; set; }
    [Parameter] private Guid RepositoryId { get; set; }

    private RepositoryDto Repository { get; set; }
    private VersionControlDto VersionControl { get; set; }

    private CiCdBuildDto[] Builds { get; set; }
    private AssetDto[] Assets { get; set; }
    private DependencyDto[] Dependencies { get; set; }
    private FrameworkDto[] Frameworks { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        VersionControl = await HttpClient.GetJsonAsync<VersionControlDto>($"/api/versioncontrols/{VersionControlId}");
        Repository = await HttpClient.GetJsonAsync<RepositoryDto>($"/api/repositories/{RepositoryId}");
        Builds = await HttpClient.GetJsonAsync<CiCdBuildDto[]>($"/api/repositories/{RepositoryId}/cicds");
        Dependencies = await HttpClient.GetJsonAsync<DependencyDto[]>($"/api/repositories/{RepositoryId}/dependencies");
        Assets = await HttpClient.GetJsonAsync<AssetDto[]>($"/api/repositories/{RepositoryId}/assets");
        Frameworks = await HttpClient.GetJsonAsync<FrameworkDto[]>($"/api/repositories/{RepositoryId}/frameworks");
    }
}
