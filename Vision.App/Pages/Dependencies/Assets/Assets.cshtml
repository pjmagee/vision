@page "/dependencies/{dependencyId:guid}/assets"
@inject HttpClient HttpClient
@inject IJSRuntime Runtime

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Frameworks</a></li>
        <li class="breadcrumb-item active" aria-current="page">Dependencies</li>
    </ol>
</nav>

<HeadingComponent Title="@Title"></HeadingComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Assets</h6>
    </div>
    <div class="card-body">
        @if (Items != null)
        {
            <table class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Repository</th>
                        <th>Asset</th>
                        <th>Version</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Items)
                    {
                        <tr>
                            <td>@item.Repository</td>
                            <td>@item.Name</td>
                            <td>@item.Version</td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions {

    [Parameter] private Guid dependencyId { get; set; }

    public string Title { get; set; }

    private DependencyDto Dependency { get; set; }
    private AssetDependencyDto[] Items { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Dependency = await HttpClient.GetJsonAsync<DependencyDto>($"/api/dependencies/{dependencyId}");
        Items = await HttpClient.GetJsonAsync<AssetDependencyDto[]>($"/api/dependencies/{dependencyId}/assets");
        Title = Dependency.Name + " assets";
    }

    protected override async Task OnAfterRenderAsync()
    {
        await Runtime.InvokeAsync<object>("dataTable");
    }
}
