@page "/tasks"
@inject HttpClient HttpClient
@inject IJSRuntime Runtime

<HeadingComponent Title="Refresh Tasks"></HeadingComponent>


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Refresh Tasks</h6>
    </div>
    <div class="card-body">
        @if (RefreshTasks != null)
        {
            <table class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Kind</th>
                        <th>Target</th>
                        <th>Created</th>
                        <th>Completed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in RefreshTasks)
                    {
                    <tr>
                        <td>@item.Status</td>
                        <td>@item.Kind.ToString()</td>
                        <td>@item.TargetId</td>
                        <th>@item.Created</th>
                        <th>@item.Completed?.ToString()</th>
                        <td>
                            <!-- TODO: DELETE TASK -->
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions {

    private RefreshDto[] RefreshTasks { get; set; }

    protected override async Task OnInitAsync()
    {
        RefreshTasks = await HttpClient.GetJsonAsync<RefreshDto[]>("/api/tasks");
    }

    protected override async Task OnAfterRenderAsync()
    {
        await Runtime.InvokeAsync<object>("dataTable");
    }
}