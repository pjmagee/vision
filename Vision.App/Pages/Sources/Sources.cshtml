@page "/sources"
@inject HttpClient HttpClient
@inject IJSRuntime Runtime

<HeadingComponent Title="Git Servers"></HeadingComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Add new</h6>
    </div>
    <div class="card-body">
        <form>
            <div class="form-group">
                <input type="text" class="form-control" bind="Source.Endpoint" placeholder="Endpoint" />
            </div>
            <div class="form-group">
                <input type="text" class="form-control" bind="Source.ApiKey" placeholder="API Key" />
            </div>
            <div class="form-group">
                <select type="text" class="form-control" bind="Source.Kind" placeholder="Type">
                    @foreach (GitKind kind in Enum.GetValues(typeof(GitKind)).Cast<GitKind>())
                    {
                        <option value="@kind">@kind.ToString()</option>
                    }
                </select>
             </div>
            <button onclick="Submit" class="btn btn-primary">Save</button>
        </form>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Sources</h6>
    </div>
    <div class="card-body">
        @if (GitSources != null)
        {
            <table class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Endpoint</th>
                        <th>ApiKey</th>
                        <th>Repositories</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in GitSources)
                    {
                        <tr>
                            <td>@item.Endpoint</td>
                            <td>@item.ApiKey</td>
                            <td>@item.Repositories</td>
                            <td>
                                <NavLink class="nav-link" href="@($"/sources/{item.SourceId}/repositories")" Match="NavLinkMatch.All">Repositories</NavLink>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions {

    private GitSourceDto[] GitSources { get; set; }
    private GitSourceDto Source { get; set; } = new GitSourceDto();

    protected override async Task OnInitAsync()
    {
        GitSources = await HttpClient.GetJsonAsync<GitSourceDto[]>("/api/sources");
    }

    protected async Task Submit()
    {
        var source = await HttpClient.PostJsonAsync<GitSourceDto>("/api/sources", Source);
        GitSources = GitSources.Concat(new[] { source }).ToArray();
    }

    protected override async Task OnAfterRenderAsync()
    {
        await Runtime.InvokeAsync<object>("dataTable");
    }
}