@page "/repositories/{Id:guid}"
@inject HttpClient HttpClient

<BreadcrumbsComponent Key="repository"></BreadcrumbsComponent>

<HeadingComponent Title="@Item?.WebUrl"></HeadingComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Assets</h6>
    </div>
    <div class="card-body">
        @if (Assets != null)
        {
            <AssetsComponent Items="Assets"></AssetsComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Builds</h6>
    </div>
    <div class="card-body">
        @if (Builds != null)
        {
           <CiCdBuildsComponent Items="Builds"></CiCdBuildsComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Frameworks</h6>
    </div>
    <div class="card-body">
        @if (Frameworks != null)
        {
            <FrameworksComponent Items="Frameworks"></FrameworksComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>


@functions 
{
    [Parameter]
    private Guid Id { get; set; }
    
    private RepositoryDto Item { get; set; }
    private CiCdBuildDto[] Builds { get; set; }
    private AssetDto[] Assets { get; set; }
    private FrameworkDto[] Frameworks { get; set; }    

    protected override async Task OnParametersSetAsync()
    {
        Item = await HttpClient.GetJsonAsync<RepositoryDto>($"/api/repositories/{Id}");
        Builds = await HttpClient.GetJsonAsync<CiCdBuildDto[]>($"/api/repositories/{Id}/cicds");
        Assets = await HttpClient.GetJsonAsync<AssetDto[]>($"/api/repositories/{Id}/assets");
        Frameworks = await HttpClient.GetJsonAsync<FrameworkDto[]>($"/api/repositories/{Id}/frameworks");
        StateHasChanged();
    }
}