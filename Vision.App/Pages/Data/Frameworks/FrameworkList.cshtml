@page "/data/frameworks/"

@inject HttpClient HttpClient
@inject IJSRuntime Runtime

<BreadcrumbsComponent>
    <li class="breadcrumb-item">Data</li>
    <li class="breadcrumb-item active">Frameworks</li>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Frameworks</h6>
    </div>
    <div class="card-body">
        @if (Frameworks != null)
        {
            <table class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Assets</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Frameworks)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Assets</td>
                            <td>
                                <NavLink class="nav-link" href="@($"/data/frameworks/{item.FrameworkId}")">Details</NavLink>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions
{

    private FrameworkDto[] Frameworks { get; set; }

    protected override async Task OnInitAsync()
    {
        Frameworks = await HttpClient.GetJsonAsync<FrameworkDto[]>("/api/frameworks");
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync() => await Runtime.InvokeAsync<object>("dataTable");
}
