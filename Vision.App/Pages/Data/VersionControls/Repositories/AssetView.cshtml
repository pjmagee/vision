@page "/data/vcs/{VersionControlId:guid}/repositories/{RepositoryId:guid}/assets/{AssetId:guid}/"

@inject HttpClient HttpClient
@inject IJSRuntime Runtime

    <BreadcrumbsComponent>
        <li class="breadcrumb-item">Data</li>
        <li class="breadcrumb-item">Version control systems</li>
        <li class="breadcrumb-item"><a href="@($"/vcs/{VersionControlId}")">Repositories</a></li>
        <li class="breadcrumb-item"><a href="@($"/vcs/{VersionControlId}repositories/{RepositoryId}")">@Repository?.WebUrl</a></li>
        <li class="breadcrumb-item active">@Asset?.Asset</li>
    </BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Dependencies</h6>
    </div>
    <div class="card-body">
        @if (Dependencies != null)
        {
            <DependenciesComponent Items="Dependencies"></DependenciesComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Frameworks</h6>
    </div>
    <div class="card-body">
        @if (Frameworks != null)
        {
            <FrameworksComponent Items="Frameworks"></FrameworksComponent>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>


@functions
{
    [Parameter] private Guid AssetId { get; set; }
    [Parameter] private Guid RepositoryId { get; set; }
    [Parameter] private Guid VersionControlId { get; set; }
    
    private FrameworkDto[] Frameworks { get; set; }
    private AssetDto Asset { get; set; }
    private RepositoryDto Repository { get; set; }

    private DependencyDto[] Dependencies { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Repository = await HttpClient.GetJsonAsync<RepositoryDto>($"/api/repositories/{RepositoryId}");
        Asset = await HttpClient.GetJsonAsync<AssetDto>($"/api/assets/{AssetId}");
        Dependencies = await HttpClient.GetJsonAsync<DependencyDto[]>($"/api/assets/{AssetId}/dependencies");
        Frameworks = await HttpClient.GetJsonAsync<FrameworkDto[]>($"/api/assets/{AssetId}/frameworks");
    }
}
