@inject IJSRuntime Runtime

<table class="table table-striped table-bordered table-sm" style="width:100%">
    <thead>
        <tr>
            <th>@nameof(AssetDependencyDto.Asset)</th>
            <th>@nameof(AssetDependencyDto.Dependency)</th>
            <th>@nameof(AssetDependencyDto.Version)</th>
            <th>@nameof(AssetDependencyDto.IsLatest)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Items)
        {
            <tr>
                <td>@item.Asset</td>
                <td>@item.Dependency</td>
                <td>@item.Version</td>
                <td>@item.IsLatest</td>
                <td>
                    <nav class="nav">
                        <NavLink class="nav-link" href="@($"/dependencies/{item.DependencyId}")">Dependency</NavLink>
                        <NavLink class="nav-link" href="@($"/assets/{item.AssetId}")">Asset</NavLink>
                        <NavLink class="nav-link" href="@($"/repository/{item.RepositoryId}")">Repository</NavLink>
                    </nav>
                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    [Parameter] private AssetDependencyDto[] Items { get; set; }

    protected override async Task OnAfterRenderAsync()
    {
        await Runtime.InvokeAsync<object>("dataTable");
    }
}
