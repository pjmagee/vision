using Microsoft.Extensions.Logging;
using System;
using System.Linq;
using System.Threading.Tasks;

namespace Vision.Web.Core
{
    public class VulnerabilityReportService : IVulnerabilityReportService
    {
        private readonly ILogger<VulnerabilityReportService> logger;
        private VisionDbContext context;

        public VulnerabilityReportService(ILogger<VulnerabilityReportService> logger, VisionDbContext context)
        {
            this.logger = logger;
            this.context = context;
        }

        public async Task<IPaginatedList<VulnerabilityReportDto>> GetByDependencyIdAsync(Guid dependencyId, int pageIndex = 1, int pageSize = 10)
        {
            return await PaginatedList<VulnerabilityReportDto>.CreateAsync(context.VulnerabilityReports
               .Where(x => x.DependencyVersion.DependencyId == dependencyId)
               .Select(report => new VulnerabilityReportDto
               {
                   Version = report.DependencyVersion.Version,
                   CheckTime = report.CheckTime,
                   DependencyId = report.DependencyVersion.DependencyId,
                   DependencyVersionId = report.DependencyVersionId,
                   Link = report.Link,
                   ReporterKind = report.Kind,
                   ResponseData = report.ResponseData
               }),
               pageIndex, pageSize);
        }

        public async Task<IPaginatedList<VulnerabilityReportDto>> GetByDependencyVersionIdAsync(Guid dependencyVersionId, int pageIndex = 1, int pageSize = 10)
        {
            return await PaginatedList<VulnerabilityReportDto>.CreateAsync(context.VulnerabilityReports
                .Where(x => x.DependencyVersionId == dependencyVersionId)
                .Select(report => new VulnerabilityReportDto
                {
                    CheckTime = report.CheckTime,
                    Version = report.DependencyVersion.Version,
                    DependencyId = report.DependencyVersion.DependencyId,
                    DependencyVersionId = dependencyVersionId,
                    Link = report.Link,
                    ReporterKind = report.Kind,
                    ResponseData = report.ResponseData
                }),
                pageIndex, pageSize);
        }
    }
}