@page "/sources/registries"

<BreadcrumbsComponent>
    <BSBreadcrumbItem>Sources</BSBreadcrumbItem>
    <BSBreadcrumbItem>Registries</BSBreadcrumbItem>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Add new</h6>
    </div>
    <div class="card-body">

        <BSAlert IsDismissible="true" Color="Color.Info">
            Username, Password and API Keys are Encrypted upon saving.
        </BSAlert>

        <EditForm Model="@Model" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />

            <BSFormGroup>
                <BSLabel>Endpoint</BSLabel>
                <InputText Class="form-control" @bind-Value="@Model.Endpoint" />
                <ValidationMessage For="(() => Model.Endpoint)" />
            </BSFormGroup>

            <BSFormGroup>
                <BSLabel>Api Key</BSLabel>
                <InputText Class="form-control" @bind-Value="@Model.ApiKey" />
                <ValidationMessage For="@(() => Model.ApiKey)" />
            </BSFormGroup>

            <BSFormGroup>
                <BSLabel>Username</BSLabel>
                <InputText Class="form-control" @bind-Value="@Model.Username" />
                <ValidationMessage For="@(() => Model.Username)" />
            </BSFormGroup>

            <BSFormGroup>
                <BSLabel>Password</BSLabel>
                <InputText Class="form-control" @bind-Value="@Model.Password" />
                <ValidationMessage For="@(() => Model.Password)" />
            </BSFormGroup>

            <BSFormGroup>
                <BSLabel>Kind</BSLabel>
                <InputSelect Class="form-control" @bind-Value="@Model.Kind">
                    <option selected>Select</option>
                    @foreach (var kind in Enum.GetValues(typeof(DependencyKind)).Cast<DependencyKind>())
                    {
                        <option value="@kind">@kind.ToString()</option>
                    }
                </InputSelect>
            </BSFormGroup>

            <BSFormGroup>
                <div class="form-check">
                    <InputCheckbox Class="form-check-input" @bind-Value="@Model.IsPublic" />
                    <BSLabel Class="form-check-label">Public</BSLabel>
                </div>
            </BSFormGroup>

            <BSFormGroup>
                <div class="form-check">
                    <InputCheckbox Class="form-check-input" @bind-Value="@Model.IsEnabled" />
                    <BSLabel Class="form-check-label">Enabled</BSLabel>
                </div>
            </BSFormGroup>

            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>

    </div>
</div>

@code
{
    [Inject] IRegistryService RegistryService { get; set; }

    RegistryDto Model { get; set; } = new RegistryDto();    

    protected async Task Submit()
    {
       await RegistryService.CreateAsync(Model);
    }
}
