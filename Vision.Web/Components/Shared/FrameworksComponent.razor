<BlazorTable IsBordered="true" IsResponsive="true" IsSmall="true" IsStriped="true">
    <thead>
        <tr>
            <th>Name</th>
            <th>Assets</th>
        </tr>
    </thead>
    <tbody>
        @if (Items != null)
        {
            @foreach (var item in Items)
            {
                <tr>
                    <td><a href="@($"/data/frameworks/{item.FrameworkId}")">@item.Name</a></td>
                    <td>@item.Assets</td>
                </tr>
            }
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </tbody>
</BlazorTable>

<PagerComponent Pager="Items" Page="@(async(p) => await PageAsync(p))"></PagerComponent>

@functions
{    
    [Parameter] Guid? RepositoryId { get; set; }
    [Parameter] Guid? AssetId { get; set; }

    [Inject] IFrameworkService FrameworksService { get; set; }
    [Inject] SvgService SvgService { get; set; }

    IPaginatedList<FrameworkDto> Items { get; set; }
    
    protected override async Task OnParametersSetAsync()
    {
        await PageAsync(page: 1);
    }

    async Task PageAsync(int page = 1)
    {
        if(RepositoryId.HasValue)
        {
            Items = await FrameworksService.GetByRepositoryIdAsync(RepositoryId.Value, page);
        }
        else if(AssetId.HasValue)
        {
            Items = await FrameworksService.GetByAssetIdAsync(AssetId.Value, page);
        }       
        else
        {
            Items = await FrameworksService.GetAsync(page);
        }

        StateHasChanged();
    }
}
