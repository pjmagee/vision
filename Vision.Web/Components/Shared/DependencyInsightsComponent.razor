@if (Items != null)
{
    foreach (var row in Items.ChunkBy(2))
    {
        <div class="row mb-4">
            @foreach (var item in row)
            {
                <div class="col mb-4">
                    @if (item.Items != null)
                    {
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">@item.Title</h6>
                            </div>
                            <div class="card-body">
                                <DependenciesComponent Items="@(new PaginatedList<DependencyDto>(item.Items.ToList(), item.Items.Count(), 1, 1000))"></DependenciesComponent>
                            </div>
                        </div>
                    }
                </div>
             }
        </div>
    }
}
else
{
    <LoaderComponent></LoaderComponent>
}

@functions
{
    [Parameter] DependencyKind DependencyKind { get; set; }

    [Inject] MetricItemsService InsightsService { get; set; }

    IEnumerable<MetricItems<DependencyDto>> Items { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Items = await InsightsService.GetDependencyInsightsByKindAsync(DependencyKind);
    }
}
