@page "/admin/tasks"

<BreadcrumbsComponent>
    <BreadcrumbItem>Data</BreadcrumbItem>
    <BreadcrumbItem>Admin</BreadcrumbItem>
    <BreadcrumbItem IsActive="true"><a href="/data/tasks">Tasks</a></BreadcrumbItem>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Refresh Tasks</h6>
    </div>
    <div class="card-body">
        @if (Items != null)
        {
            <table class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Scope</th>
                        <th>Target</th>
                        <th>Created</th>
                        <th>Completed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Items)
                    {
                        <tr>
                            <td>@item.Scope.ToString()</td>
                            <td>@item.TargetId</td>
                            <th>@item.Created</th>
                            <th>@item.Completed?.ToString()</th>
                            <td>
                                <!-- TODO: DELETE TASK -->
                            </td>
                        </tr>
                    }

                    @if (!Items.Any())
                    {
                        <tr>
                            <td colspan="5">
                                No refresh tasks found.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions 
{
    IEnumerable<SystemTask> Items { get; set; }

    [Inject] ISystemTaskService SystemTaskService { get; set; }
    [Inject] IJSRuntime Runtime { get; set; }

    protected override async Task OnInitAsync()
    {
        Items = await SystemTaskService.GetAllAsync();
    }
}