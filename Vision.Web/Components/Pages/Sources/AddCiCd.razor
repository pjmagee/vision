@page "/sources/cicds"

<BreadcrumbsComponent>
    <li class="breadcrumb-item">Sources</li>
    <li class="breadcrumb-item active">Contionus integration & Continious delivery</li>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Add new</h6>
    </div>
    <div class="card-body">        
        <BlazorForm IsInline="false">
            <EditForm Model="@CiCd" OnValidSubmit="@Submit">
                <ValidationSummary />                
                <DataAnnotationsValidator />

                <div class="form-group">
                    <input id="endpoint" type="text" class="form-control" bind="@CiCd.Endpoint" placeholder="Endpoint" />
                    <ValidationMessage For="@(() => CiCd.Endpoint)" />
                </div>
                <div class="form-group">
                    <input Class="form-control" bind="@CiCd.ApiKey" placeholder="API Key" />
                </div>
                <div class="form-group">
                    <input Class="form-control" bind="@CiCd.Username" placeholder="Username" />
                </div>
                <div class="form-group">
                    <input type="password" class="form-control" bind="@CiCd.Password" placeholder="Password" />
                </div>
                <div class="form-group">
                    <InputSelect class="form-control" bind-Value="@CiCd.Kind">
                        <option>Select</option>
                        @foreach (CiCdKind kind in Enum.GetValues(typeof(CiCdKind)).Cast<CiCdKind>())
                        {
                            <option value="@kind">@kind.ToString()</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => CiCd.Kind)" />
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <InputCheckbox bind-Value="@CiCd.IsGuestEnabled" class="form-check-input" id="isGuestEnabled" />                        
                        <FormLabel Class="form-check-label">Guest enabled</FormLabel>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <InputCheckbox class="form-check-input" bind-Value="@CiCd.IsEnabled" id="isEnabled" />
                        <FormLabel Class="form-check-label">Enabled</FormLabel>
                    </div>
                </div>
                <button  type="button" class="btn btn-primary">Save</button>                
            </EditForm>
        </BlazorForm>
    </div>
</div>

@functions
{
    [Inject] ICiCdService CiCdService { get; set; }

    CiCdDto CiCd { get; set; } = new CiCdDto();

    protected async Task Submit()
    {
        await CiCdService.CreateAsync(CiCd);
    }
}