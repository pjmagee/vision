@page "/sources/edit/registries/{RegistryId:guid}"

<BreadcrumbsComponent>
    <BreadcrumbItem>Sources</BreadcrumbItem>
    <BreadcrumbItem>Registries</BreadcrumbItem>
    <BreadcrumbItem IsActive="true">Edit</BreadcrumbItem>
</BreadcrumbsComponent>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Update</h6>
    </div>
    <div class="card-body">
        @if (Registry != null)
        {
            <EditForm EditContext="@context">
                <ValidationSummary></ValidationSummary>
                <div class="form-group">
                    <input type="text" class="form-control" bind="Registry.Endpoint" placeholder="http://registry.com:8000/v1/" />
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" bind="Registry.ApiKey" placeholder="API Key" />
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" bind="Registry.Username" placeholder=" Username" />
                </div>
                <div class="form-group">
                    <input type="password" class="form-control" bind="Registry.Password" placeholder="Password" />
                </div>
                <div class="form-group">
                    <select type="text" class="form-control" bind="Registry.Kind" placeholder="Type">
                        @foreach (var kind in Enum.GetValues(typeof(DependencyKind)).Cast<DependencyKind>())
                        {
                            <option value="@kind">@kind.ToString()</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" bind="Registry.IsPublic" id="isPublic" />
                        <label class="form-check-label" for="isPublic">Public</label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" bind="Registry.IsEnabled" id="isEnabled" />
                        <label class="form-check-label" for="isEnabled">Enabled</label>
                    </div>
                </div>
                <button onclick="@Update" type="button" class="btn btn-primary">Update</button>
            </EditForm>
        }
        else
        {
            <LoaderComponent></LoaderComponent>
        }
    </div>
</div>

@functions
{
    [Parameter] Guid RegistryId { get; set; }

    [Inject] IRegistryService RegistryService { get; set; }
    [Inject] IUriHelper UriHelper { get; set; }

    RegistryDto Registry { get; set; }
    EditContext context { get; set; }

    protected async Task Update()
    {
        if (context.Validate())
        {
            await RegistryService.UpdateAsync(Registry);
            UriHelper.NavigateTo("/data/registries");
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        Registry = await RegistryService.GetByIdAsync(RegistryId);
        context = new EditContext(Registry);
        context.AddDataAnnotationsValidation();
    }
}
