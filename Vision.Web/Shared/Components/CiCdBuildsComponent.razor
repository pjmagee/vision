@inherits OwningComponentBase

<BSTable IsResponsive="true" IsSmall="true" IsStriped="true" IsBordered="true">
    <thead>
        <tr>
            <th>Kind</th>
            <th>Build</th>
            <th>Web Url</th>
        </tr>
    </thead>
    <tbody>
        @if (Items != null)
        {
            @foreach (var item in Items)
            {
                <tr>
                    <td class="@item.Kind.GetIconClass()">@SvgService.GetSvg(item.Kind)</td>
                    <td>@item.Name</td>
                    <td><a href="@item.WebUrl" target="_blank">@item.WebUrl</a></td>
                </tr>
            }

            @if (!Items.Any())
            {
                <tr>
                    <td colspan="3">None found.</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3">
                    <LoaderComponent />
                </td>
            </tr>
        }
    </tbody>
</BSTable>

@code
{
    [Parameter] public Guid RepositoryId { get; set; }

    SvgService SvgService { get; set; }
    IAggregateCICDBuildsProvider CICDProvider { get; set; }
    
    IEnumerable<CiCdBuildDto> Items { get; set; }

    protected override void OnInitialized()
    {
        SvgService = (SvgService)ScopedServices.GetService(typeof(SvgService));
        CICDProvider = (IAggregateCICDBuildsProvider)ScopedServices.GetService(typeof(IAggregateCICDBuildsProvider));
    }

    protected override async Task OnParametersSetAsync()
    {
        Items = await CICDProvider.GetBuildsByRepositoryIdAsync(RepositoryId);
        StateHasChanged();
    }
}
